DEFINIÇÕES

UTILITÁRIOS
Dir >>> Retorna atributos, funções e metodos
Help >>> Retorna a documentação
-----------------------------------------------------------------------------------------------------------------------

ENTRADA E SAÍDA
Print >>> Saída, mostra os dados na tela do usuário.
Input >>> Receber dados do usuário do sistema.
-----------------------------------------------------------------------------------------------------------------------

TIPO INTEIRO >>> Tipagem dinamica, quando declaramos uma variável, não precisar determinar seu tipo.
Ex java: int num = 40

Inteiro - int
ex: 123 65 98 90

Dados númericos devem ser inserido sempres sem as aspas, exceto quando houver
necessidade de manipulação destes valores como string.

Função TYPE >>> Retorna o tipo do dado inserido.
-----------------------------------------------------------------------------------------------------------------------

TIPO FLOAT
Float >>> Números reais ou decimais. Importante ressaltar que sempre
deve ser separados por ponto e não vírgula.
-----------------------------------------------------------------------------------------------------------------------

TIPO BOOLEAN
Booleano >>> 2 constantes - Verdadeiro e falso.
Maneira direta de testar booleano >>>  print('a' in 'maria')
-----------------------------------------------------------------------------------------------------------------------

TIPO STRING
Texto por padrão, sempre estará entre:
    ' ' aspas simples
    " " aspas duplas
    ''' ''' aspas simples triplas
    """ """ aspas duplas trilas
-----------------------------------------------------------------------------------------------------------------------

ESCOPO DE VARIÁVEIS
Escopo >>> Limitação de algo
Escopo de variáveis >>> Onde está variável será reconhecida dentro do código.

Variáveis Globais >>> São reconhecidas em todo o código.

Variáveis Locais >>> São reconhecidas apenas dentro do bloco onde foram declaradas.
-----------------------------------------------------------------------------------------------------------------------

ESTRUTURAS LÓGICAS E CONDICIONAIS

If, Else, Elif >>> Extrutura condicional, permite que o código trafegue por vários caminhos, de acordo com a decisões
que são tomadas no decorrer da execução. Ps. Elif só existem em Python

Ex em java:

idade = 16

if(idade < 18){
    System.out.println("Menor de idade");
}else if(idade == 18){
    System.out.prinln("Tem 18 anos");
}else{
    System.out.prinln("Maior de idade");
}
-----------------------------------------------------------------------------------------------------------------------

AND, OR, NOT, IS

Operadores unitários (Dependem de um único valor)>>> not, is
Operadores binários (Dependem de mais que um valor)>>> and, or

and = Ambos os valores precisam ser True
or = Pelo menos um dos valores precisa ser True
not = Valor booleano é invertido, (negação)
is = questiona de um dado é... atrelado ao booleano
-----------------------------------------------------------------------------------------------------------------------

ESTRUTURA DE REPETIÇÃO

For >>> Utilizada quando se sabe a quantidade de repetições que serão necessárias, de forma que é obrigatório determinar
o final da execução do laço.

Sintaxe >>> for item in iteravel:
                execução

* range >>> (valor inicial, valor final, passo) Vale ressaltar que em python, o último valor não é inclusive.

* enumerate >>> Retorna indice e valor.

Ex:
frase = 'frase de teste'
for valor in enumerate(frase):
        print(valor)

Resulta >>> cada índice por letra da frase.

